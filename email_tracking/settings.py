"""
Django settings for email_tracking project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

def import_env_vars(project_root,env_filename):
	"""Imports some environment variables from a special .env file in the
	project root directory.
	"""
	if len(project_root) > 0 and project_root[-1] != '/':
		project_root += '/'
	try:
		#print("filename:", project_root + env_filename)
		envfile = open(project_root + env_filename, "r")
	except IOError:
		raise Exception("You must have a {0} file in your project root "
						"in order to run the server in your local machine. "
						"This specifies some necessary environment variables. ")
	for line in envfile.readlines():
		#print('line:',line)
		first_equals = line.find('=')
		key = line[:first_equals]
		value = line[first_equals+1:].strip()
		#[key,value] = line.strip().split("=")
		#print('key:',key)
		#print('value:', value)
		os.environ[key] = value

if Path("env").is_file():
	# file exists
	print("Found env file. Reading variables.")
	import_env_vars('','env')
else:
	print("Did not find env file. Expect environment variables to be passed to container.")
db_name = 'email_tracking'
stage = os.getenv('stage')
print('stage:',stage)
django_secret_key=stage = os.getenv('django_secret_key')
mongodb_uri = os.getenv('mongodb_uri')
mongodb_uri_prod = os.getenv('mongodb_uri_prod')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = django_secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

stage = os.getenv('stage')
if stage == "dev":
	ALLOWED_HOSTS = []
	db_name = 'email_tracking'
	static_url = 'static/'
elif stage == "prod":
	ALLOWED_HOSTS = ['*']
	db_name = 'email_tracking_prod'
	static_url = '/static/'
	static_root = '/home/saknesar/public_html/static'

# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'tracking_app.apps.TrackingAppConfig',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'email_tracking.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'email_tracking.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

stage = os.getenv('stage')
if stage == "prod":
	mongodb_uri = mongodb_uri_prod
print('mongodb_uri:',mongodb_uri)
DATABASES = {
	'default': {
		'ENGINE': 'djongo',
		'NAME': db_name,
			'ENFORCE_SCHEMA': False,
			'CLIENT': {
				'host': mongodb_uri
			}
		}
	}
print('DATABASES:', DATABASES)

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Riga'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/


STATIC_URL = static_url
if stage == "prod":
	STATIC_ROOT = static_root

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
